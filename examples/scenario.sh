#!/bin/bash

# Trackalyzer Usage Example Script - Interactive Version
# This script demonstrates how to use Trackalyzer to track work on a web application project

# Set script to exit on error
set -e

echo "=== Trackalyzer Web Application Development Example ==="
echo "This script demonstrates a complete workflow for tracking development tasks."
echo "You will be prompted to provide input at each step."
echo ""

# Create a sample output directory if it doesn't exist
mkdir -p examples/sample_output

# Check if trackalyzer is installed and accessible
if ! command -v trackalyzer &> /dev/null; then
    echo "Trackalyzer command not found. Make sure it's installed and linked correctly."
    echo "You can run: npm link"
    exit 1
fi

# Function to pause script and wait for user
pause() {
  read -p "Press Enter to continue..."
}

# Function to confirm step
confirm_step() {
  echo ""
  echo "🔍 $1"
  pause
}

echo "Step 1: Create a new collection for the web application project"
echo "   >>> trackalyzer collection create <<<"
confirm_step "You'll be prompted to enter a collection name. Please enter 'Web App Development'"
trackalyzer collection create

echo ""
echo "Step 2: Start a task for project setup"
echo "   >>> trackalyzer task start <<<"
confirm_step "You'll be prompted to enter a task name. Please enter 'Project setup'"
trackalyzer task start

echo ""
echo "Step 3: Stop the task"
echo "   >>> trackalyzer task stop <<<"
confirm_step "You'll be prompted to enter task description and pull request. Enter 'Initialize project structure and dependencies' for description and leave PR empty"
trackalyzer task stop

echo ""
echo "Step 4: Start a task for database schema"
echo "   >>> trackalyzer task start <<<"
confirm_step "Please enter 'Database schema' as the task name"
trackalyzer task start

echo ""
echo "Step 5: Stop the task and link it to a pull request"
echo "   >>> trackalyzer task stop <<<"
confirm_step "Enter 'Create database models and migrations' for description and 'github.com/user/webapp/pull/42' for pull request"
trackalyzer task stop

echo ""
echo "Step 6: Start a task for user authentication"
echo "   >>> trackalyzer task start <<<"
confirm_step "Please enter 'User authentication' as the task name"
trackalyzer task start

echo ""
echo "Step 7: Stop the task and link it to a pull request"
echo "   >>> trackalyzer task stop <<<"
confirm_step "Enter 'Implement login, registration, and password reset' for description and 'github.com/user/webapp/pull/43' for pull request"
trackalyzer task stop

echo ""
echo "Step 8: Start a task for product catalog"
echo "   >>> trackalyzer task start <<<"
confirm_step "Please enter 'Product catalog' as the task name"
trackalyzer task start

echo ""
echo "Step 9: Stop the task and link it to a pull request"
echo "   >>> trackalyzer task stop <<<"
confirm_step "Enter 'Implement product listing and search functionality' for description and 'github.com/user/webapp/pull/44' for pull request"
trackalyzer task stop

echo ""
echo "Step 10: Start a task for checkout process"
echo "   >>> trackalyzer task start <<<"
confirm_step "Please enter 'Checkout process' as the task name"
trackalyzer task start

echo ""
echo "Step 11: Stop the task and link it to a pull request"
echo "   >>> trackalyzer task stop <<<"
confirm_step "Enter 'Implement shopping cart and payment integration' for description and 'github.com/user/webapp/pull/45' for pull request"
trackalyzer task stop

echo ""
echo "Step 12: Generate analysis reports"
echo "   >>> trackalyzer collection analyze <<<"
confirm_step "For the first report, enter 'examples/sample_output' as the output directory and 'md' as the format"
trackalyzer collection analyze

echo ""
echo "   >>> trackalyzer collection analyze <<<"
confirm_step "For the second report, enter 'examples/sample_output' as the output directory and 'docx' as the format"
trackalyzer collection analyze

echo ""
echo "=== Example scenario complete ===" 
echo "Files generated by trackalyzer can be found in examples/sample_output"